name: Release

on:
  push:
    tags:
      - 'v*.*.*'

# Grant the workflow permission to create releases and upload assets
permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Build web
        run: npm run build:web
      - name: List build directory (debug)
        run: |
          echo "Listing build/ contents"
          ls -la build || true
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: "Release triggered from tag ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Detect artifact to upload
        id: detect_artifact
        run: |
          candidates=("build/frontend-prototype.html" "build/index.html" "build/build.zip" "dist/app.zip")
          chosen=""
          for c in "${candidates[@]}"; do
            if [ -f "$c" ]; then
              chosen="$c"
              break
            fi
          done
          if [ -z "$chosen" ]; then
            echo "No artifact found among candidates: ${candidates[*]}"
            echo "artifact_path=" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "Found artifact: $chosen"
          echo "artifact_path=$chosen" >> $GITHUB_OUTPUT
      - name: Upload release asset (if present)
        if: steps.detect_artifact.outputs.artifact_path != ''
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.detect_artifact.outputs.artifact_path }}
          asset_name: ${{ steps.detect_artifact.outputs.artifact_path }}
          asset_content_type: application/octet-stream
      - name: Show release URL
        if: always()
        run: |
          echo "Release created: ${{ steps.create_release.outputs.html_url }}"
