name: Release

on:
  push:
    tags:
      - 'v*.*.*'

# Grant the workflow permission to create releases and upload assets
permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Build web
        run: npm run build
      - name: List dist directory (debug)
        run: |
          echo "Listing dist/ contents"
          ls -la dist || true
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: "Release triggered from tag ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Detect artifact to upload
        id: detect_artifact
        run: |
          set -e
          candidates=("dist/frontend-prototype.html" "dist/index.html" "dist/build.zip" "dist/app.zip")
          chosen=""
          for c in "${candidates[@]}"; do
            if [ -f "$c" ]; then
              chosen="$c"
              break
            fi
          done
          if [ -z "$chosen" ]; then
            echo "No artifact found among candidates: ${candidates[*]}"
            echo "artifact_path=" >> $GITHUB_OUTPUT
            echo "artifact_name=" >> $GITHUB_OUTPUT
            echo "artifact_content_type=" >> $GITHUB_OUTPUT
            exit 0
          fi
          # derive basename and content type
          name=$(basename "$chosen")
          ext="${name##*.}"
          content_type="application/octet-stream"
          if [ "$ext" = "html" ]; then
            content_type="text/html"
          elif [ "$ext" = "zip" ]; then
            content_type="application/zip"
          fi
          echo "Found artifact: $chosen"
          echo "artifact_path=$chosen" >> $GITHUB_OUTPUT
          echo "artifact_name=$name" >> $GITHUB_OUTPUT
          echo "artifact_content_type=$content_type" >> $GITHUB_OUTPUT
      - name: Upload release asset (if present)
        if: steps.detect_artifact.outputs.artifact_path != ''
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.detect_artifact.outputs.artifact_path }}
          asset_name: ${{ steps.detect_artifact.outputs.artifact_name }}
          asset_content_type: ${{ steps.detect_artifact.outputs.artifact_content_type }}
      - name: Show release URL
        if: always()
        run: |
          echo "Release created: ${{ steps.create_release.outputs.html_url }}"
